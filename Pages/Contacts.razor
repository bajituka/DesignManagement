@page "/contacts"
@inject ContactDataAccessLayer.IContactService service
@inject NavigationManager NavigationManager

<h1>Контакты</h1>

@if (ContactsList == null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <div>
        <a href="contacts/create">Новый контакт</a>
        @*<button type="button" class="btn btn-primary" value="New" />*@
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Контакт</th>
                <th>Тип</th>
                <th>Электронная почта</th>
                <th>Телефон</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var contact in ContactsList)
            {
                <tr>
                    <td><a @onclick="(() => PrepareForEdit(contact.Id))">@contact.ContactName</a></td>
                    <td>@contact.Type.GetDisplayName()</td>
                    <td>@contact.Email</td>
                    <td>@contact.Phone</td>
                    <td><button class="btn btn-danger" @onclick="(() => DeleteRecord(contact.Id))">Удалить</button></td>
                </tr>
            }
        </tbody>
    </table>
}



@code {
    List<Contact> ContactsList;

    protected override async Task OnInitializedAsync()
    {
        ContactsList = await service.Get();
    }

    private async void DeleteRecord(int id)
    {
        await service.Delete(id);
        NavigationManager.NavigateTo("/contacts", true);
    }

    public void PrepareForEdit(int contactId)
    {
        NavigationManager.NavigateTo("/contacts/" + contactId.ToString());
    }
}